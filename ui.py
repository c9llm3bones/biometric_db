import streamlit as st
from utils import db_utils as dbu
from utils import face_utils as fu, voice_utils as vu, signature_utils as su

st.title("üîê –ë–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è / –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è")

mode = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", [
    "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ª–∏—Ü–∞", "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ª–∏—Ü–∞",
    "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≥–æ–ª–æ—Å–∞", "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≥–æ–ª–æ—Å–∞",
    "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∏", "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∏"
])

def show_register(biotype, extract_fn, save_fn):
    st.header(f"–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ {biotype}")
    name = st.text_input("–ü–æ–ª–Ω–æ–µ –∏–º—è")
    gender = st.selectbox("–ü–æ–ª", ["M", "F"])
    bdate = st.date_input("–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è")
    consent = st.checkbox("–î–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö")
    file = st.file_uploader(f"–§–∞–π–ª ({biotype})", type={"jpg","jpeg","png"} if biotype=="–ª–∏—Ü—É" else {"wav","ogg","mp3"})
    if st.button("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å"):
        if not file:
            st.error("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª")
            return
        with open("tmp.bin", "wb") as f:
            f.write(file.getbuffer())
        vec = extract_fn("tmp.bin")
        sample_id = dbu.register_user(name, gender, bdate.strftime("%Y-%m-%d"), consent, "tmp.bin", biotype)
        if save_fn(sample_id, vec):
            st.success(f"{biotype.capitalize()} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")
        else:
            st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤–µ–∫—Ç–æ—Ä–∞")

def show_login(biotype, extract_fn, recognize_fn):
    st.header(f"–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ {biotype}")
    file = st.file_uploader(f"–§–∞–π–ª ({biotype})", type={"jpg","jpeg","png"} if biotype=="–ª–∏—Ü—É" else {"wav","ogg","mp3"})
    if st.button("–í–æ–π—Ç–∏"):
        if not file:
            st.error("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª")
            return
        with open("tmp.bin", "wb") as f:
            f.write(file.getbuffer())
        vec = extract_fn("tmp.bin")
        matches = recognize_fn(vec)
        if matches:
            for name, sim in matches:
                st.write(f"**{name}** ‚Äî —Å—Ö–æ–¥—Å—Ç–≤–æ: {1-sim:.2%}")
        else:
            st.error("–ù–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ")

if mode == "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ª–∏—Ü–∞":
    show_register("–ª–∏—Ü—É", fu.get_face_vector, dbu.save_face_vector)
elif mode == "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ª–∏—Ü–∞":
    show_login("–ª–∏—Ü—É", fu.get_face_vector, dbu.recognize_face)
elif mode == "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≥–æ–ª–æ—Å–∞":
    show_register("–≥–æ–ª–æ—Å", vu.extract_audio_vector, dbu.save_voice_vector)
elif mode == "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≥–æ–ª–æ—Å–∞":
    show_login("–≥–æ–ª–æ—Å—É", vu.extract_audio_vector, dbu.recognize_voice)
elif mode == "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∏":
    show_register("–ø–æ–¥–ø–∏—Å–∏", su.extract_signature_vector, dbu.save_signature_vector)
elif mode == "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∏":
    show_login("–ø–æ–¥–ø–∏—Å–∏", su.extract_signature_vector, dbu.recognize_signature)
